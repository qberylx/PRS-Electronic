//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PurchaseWeb_2.ModelData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Domi_PurEntities : DbContext
    {
        public Domi_PurEntities()
            : base("name=Domi_PurEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Audlgn_Log> Audlgn_Log { get; set; }
        public virtual DbSet<Department_mst> Department_mst { get; set; }
        public virtual DbSet<Lgn_mst> Lgn_mst { get; set; }
        public virtual DbSet<Menu_mst> Menu_mst { get; set; }
        public virtual DbSet<Position_mst> Position_mst { get; set; }
        public virtual DbSet<SubMenu_mst> SubMenu_mst { get; set; }
        public virtual DbSet<Usr_mst> Usr_mst { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<RoleMenuMapping_mst> RoleMenuMapping_mst { get; set; }
        public virtual DbSet<PR_Details> PR_Details { get; set; }
        public virtual DbSet<PR_Mst> PR_Mst { get; set; }
        public virtual DbSet<UOM_mst> UOM_mst { get; set; }
        public virtual DbSet<Status_Mst> Status_Mst { get; set; }
        public virtual DbSet<PRType_mst> PRType_mst { get; set; }
        public virtual DbSet<Currency_Mst> Currency_Mst { get; set; }
        public virtual DbSet<AccCCLvl1> AccCCLvl1 { get; set; }
        public virtual DbSet<AccCCLvl2> AccCCLvl2 { get; set; }
        public virtual DbSet<AccTypeDept> AccTypeDepts { get; set; }
        public virtual DbSet<AccTypeDivision> AccTypeDivisions { get; set; }
        public virtual DbSet<AccTypeExpens> AccTypeExpenses { get; set; }
        public virtual DbSet<PR_VendorComparison> PR_VendorComparison { get; set; }
        public virtual DbSet<PO_Mst> PO_Mst { get; set; }
    
        public virtual ObjectResult<usp_GetMenuData_Result> usp_GetMenuData(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMenuData_Result>("usp_GetMenuData", userIdParameter);
        }
    
        public virtual int AssignRoleMenuMap()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AssignRoleMenuMap");
        }
    
        public virtual int GetDocNo(string initial, Nullable<int> doctype, Nullable<int> docyear, ObjectParameter lastDocNo)
        {
            var initialParameter = initial != null ?
                new ObjectParameter("initial", initial) :
                new ObjectParameter("initial", typeof(string));
    
            var doctypeParameter = doctype.HasValue ?
                new ObjectParameter("doctype", doctype) :
                new ObjectParameter("doctype", typeof(int));
    
            var docyearParameter = docyear.HasValue ?
                new ObjectParameter("docyear", docyear) :
                new ObjectParameter("docyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetDocNo", initialParameter, doctypeParameter, docyearParameter, lastDocNo);
        }
    
        public virtual ObjectResult<GetPOListbyDate_Result> GetPOListbyDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPOListbyDate_Result>("GetPOListbyDate", fromDateParameter, toDateParameter);
        }

        public System.Data.Entity.DbSet<PurchaseWeb_2.ModelData.GetPOListbyDate_Result> GetPOListbyDate_Result { get; set; }
    }
}
