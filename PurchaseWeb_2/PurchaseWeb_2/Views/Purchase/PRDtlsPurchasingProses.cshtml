@model PurchaseWeb_2.Models.PRdtlsViewModel

@{
    ViewBag.Title = "AddPurDtlsType4";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}
<style>
    .zoomedElement {
        /*background-color: #50CBFF;*/
        zoom: 90%;
    }

    .vertical-center {
        margin: 0;
        position: absolute;
        top: 50%;
        -ms-transform: translateY(-50%);
        transform: translateY(-50%);
    }
</style>

<div class="row">
    <div class="col-md-8">
        @{ Html.RenderAction("PrMstPurchasingProses", "Purchase", new { PrMstId = ViewBag.PrMstId });}

    </div>
    <div class="col-md-4">
        @{ Html.RenderAction("UploadQuo", "Purchase", new { PrMstId = ViewBag.PrMstId });}
    </div>
</div>


<div id="divPRDtlsForm">
    <div class="row zoomedElement">
        <div class="col-md-12">
            <!--card header-->
            <div class="card card-primary">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-2 ">
                            <h3 class="card-title vertical-center">Purchase Request Details</h3>
                        </div>

                    </div>
                </div>
            </div>
            <!--card body-->
            @*using (Html.BeginForm("AddPurDtls", "Purchase",FormMethod.Post))*@
            @using (Ajax.BeginForm("AddPRDtlsType4ForPurchasing", "Purchase", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divPurDtlsList", OnSuccess = "OnSuccessAdd" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.PRid, new { @Value = ViewBag.PrMstId })
                @Html.HiddenFor(model => model.PRNo, new { @Value = ViewBag.PrNo })
                @Html.HiddenFor(model => model.TypePRId, new { @Value = ViewBag.PRTypeId })


                <div class="card-body">
                    <div class="row">
                        <div class="col-2">
                            <label class="control-label ">Vendor</label>
                            <br />
                            <select class="fstdropdown-select form-control-border" id="VendorCode" name="VendorCode">
                                <option value="">Select option</option>
                                @foreach (var vendor in ViewBag.vendorlist)
                                {
                                    <option value="@vendor.VENDORID">@vendor.VENDNAME</option>
                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.VendorCode, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-3">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                            <br />
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 3, })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-1">
                            @Html.LabelFor(model => model.VendorPartNo, htmlAttributes: new { @class = "control-label " })
                            <br />
                            @Html.EditorFor(model => model.VendorPartNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VendorPartNo, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-1">
                            @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label col-md-2" })
                            <br />
                            @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-1">
                            <strong>UOM</strong>
                            <br />
                            @Html.DropDownList("UOMName",
                                new SelectList(ViewBag.UOMList, "UNIT", "UNIT"),
                                "Please Select the UOM",
                                new { @class = "custom-select form-control-border" })
                            @Html.ValidationMessageFor(model => model.UOMName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-1">
                            <strong>Req. Delivery Date</strong>
                            <br />

                            @Html.EditorFor(model => model.ReqDevDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ReqDevDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-2">
                            <strong>Estimated Unit Price</strong>
                            <br />
                            <div class="row">
                                <div class="col-md-3">
                                    @Html.DropDownList("CurCode",
                                       new SelectList(ViewBag.CurrList, "CURID", "CURID", "MYR"),
                                       new { @class = "custom-select form-control-border" })
                                </div>
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.EstimateUnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.EstimateUnitPrice, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <br />
                    <div class="row">
                        <div class="col-1">
                            <b>Item No</b>
                            <br />
                            <select class="form-control form-control-border" id="DomiPartNo" name="DomiPartNo">
                                <option value="NS">NS</option>
                                <option value="CAPEX" >CAPEX</option>
                                <option value="CAPEX02">CAPEX02</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.DomiPartNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-2">
                            <b>Last Vendor</b>
                            <br />
                            <select class="fstdropdown-select form-control-border" id="LastVendorCode" name="LastVendorCode" onchange="VendorChg(this.value)">
                                <option value="">Select option</option>
                                @foreach (var vendor in ViewBag.vendorlist)
                                {
                                    <option value="@vendor.VENDORID">@vendor.VENDNAME</option>
                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.LastVendorCode, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-1">
                            <b>Last Price</b>
                            <br />
                            @Html.EditorFor(model => model.LastPriceVendor, new { htmlAttributes = new { @class = "form-control", @onfocusout = "LastPriceVendorChg(this.value)" } })
                        </div>

                        <div id="divCurr" class="col-1">
                            <div class="row">
                                <div class="col-6">
                                    <b>Curr.</b>
                                    <br />
                                    @Html.DropDownList("LastCur",
                                               new SelectList(ViewBag.CurrList, "CURID", "CURID", "MYR"),
                                               new { @class = "custom-select form-control-border" })
                                </div>

                                <div class="col-6">
                                    <b>Exg. Rate</b>
                                    <br />
                                    @Html.EditorFor(model => model.LastCurExc, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>

                        <div class="col-1">
                            <b>Last price (MYR)</b>
                            <br />
                            @Html.EditorFor(model => model.LastPrice, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="col-1">
                            <b>Quotation Date</b>
                            <br />
                            @Html.EditorFor(model => model.LastQuoteDate, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="col-1">
                            <b>PO Date</b>
                            <br />
                            @Html.EditorFor(model => model.PODate, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="col-1">
                            <b>Last PO No</b>
                            <br />
                            @Html.EditorFor(model => model.LastPONo, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="col-2">
                            <b>Remarks</b>
                            <br />
                            @Html.TextAreaFor(model => model.PurchasingRemarks, new { @class = "form-control", @rows = 3 })
                            @Html.ValidationMessageFor(model => model.PurchasingRemarks, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-1" style="display:none">
                            <b>Cost Down %</b>
                            <br />
                            @Html.EditorFor(model => model.CostDown, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                    </div>



                </div>
                <div class="card-footer">
                    <div class="container">
                        <div class="row">
                            <div class="col-centered">
                                <input type="submit" id="btnSubmit" name="Submit" value="Add PR Details" class="btn btn-primary btn-lg" />
                            </div>
                        </div>
                        
                    </div>

                </div>
            }
        </div>

    </div>
</div>


<div class="row">
    <div class="col-md-12">
        <div id="divPurDtlsList">
            @{Html.RenderAction("PurDtlsListPurchasingProses", "Purchase", new { PrMstId = ViewBag.PrMstId });}
        </div>
    </div>
</div>

<!--Modal to reject-->
<div class="modal fade" id="rejectPR" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Reject PR</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @{Html.RenderAction("RejectPRPurchasingForm", "Purchase", new { PrMstId = ViewBag.PrMstId });}

        </div>
    </div>
</div>


<!-- Modal Add UOM -->
<div class="modal fade" id="addUOM" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            @*{Html.RenderAction("AddUOM", "Purchase");}*@
            <div class="modal-header">
                <h5 class="modal-title">Add UOM</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("AddUOM", "Purchase", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.UOM_mst.UOMName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UOM_mst.UOMName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UOM_mst.UOMName, "", new { @class = "text-danger" })

                            <input type="hidden" id="PrMstId" name="PrMstId" value="@ViewBag.PrMstId" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <div class="form-group">
                        <input type="submit" name="AddUOM" value="Add" class="btn btn-primary" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
    $(function () {
        $('input#Qty').blur(function () {
            var amt = parseFloat(this.value);
            $(this).val(amt.toFixed(2));
        });
    });

    $(function () {
        $('input#EstimateUnitPrice').blur(function () {
            var amt = parseFloat(this.value);
            $(this).val(amt.toFixed(5));
        });
    });

</script>


<div class="container">
    <div class="row">
        <div class="col-centered">
            @Html.ActionLink("Return To Main PR", "PurchasingProsesPR", "Purchase", null, new { @class = "btn btn-primary" })
            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#rejectPR">
                Reject PR
            </button>
            @Html.ActionLink("Send To Sourcing", "PRProcessing", "Purchase", new { PrMstId = ViewBag.PrMstId }, new { @class = "btn btn-success" })
        </div>
    </div>
</div>


<script>
    function OnSuccessAdd() {
        this.reset();
    }

    function VendorChg(VendorID) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("callCurrencyName","Purchase")",
            data: '{VendorID: "' + VendorID + '" }',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (response) {
                $('#divCurr').html(response);
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }

    function LastPriceVendorChg(lastPrice) {
        console.log($("#LastPriceVendor").val());
        var Price = lastPrice * $("#LastCurExc").val();
        $("#LastPrice").val(Price.toFixed(5));
    }
</script>